{"ast":null,"code":"import _objectSpread from\"/Users/dungvu/OneDrive/Code/project fotogrid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/dungvu/OneDrive/Code/project fotogrid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{projectFirestore}from'../firebase/config';var useFirestore=function useFirestore(collection){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),docs=_useState2[0],setDocs=_useState2[1];useEffect(function(){var unsub=projectFirestore.collection(collection).orderBy('createdAt','desc').onSnapshot(function(snap){var documents=[];snap.forEach(function(doc){documents.push(_objectSpread(_objectSpread({},doc.data()),{},{id:doc.id}));});setDocs(documents);});return function(){return unsub();};},[collection]);return{docs:docs};};export default useFirestore;","map":{"version":3,"sources":["/Users/dungvu/OneDrive/Code/project fotogrid/src/hooks/useFirestore.js"],"names":["useState","useEffect","projectFirestore","useFirestore","collection","docs","setDocs","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id"],"mappings":"qUAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,OAASC,gBAAT,KAAiC,oBAAjC,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,UAAD,CAAgB,eACTJ,QAAQ,CAAC,EAAD,CADC,wCAC1BK,IAD0B,eACpBC,OADoB,eAGjCL,SAAS,CAAC,UAAM,CACZ,GAAMM,CAAAA,KAAK,CAAGL,gBAAgB,CAACE,UAAjB,CAA4BA,UAA5B,EACbI,OADa,CACL,WADK,CACQ,MADR,EAEbC,UAFa,CAEF,SAACC,IAAD,CAAU,CAClB,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACAD,IAAI,CAACE,OAAL,CAAa,SAAAC,GAAG,CAAI,CAChBF,SAAS,CAACG,IAAV,gCAAmBD,GAAG,CAACE,IAAJ,EAAnB,MAA+BC,EAAE,CAAEH,GAAG,CAACG,EAAvC,IACH,CAFD,EAGAV,OAAO,CAACK,SAAD,CAAP,CACH,CARa,CAAd,CAUA,MAAO,kBAAMJ,CAAAA,KAAK,EAAX,EAAP,CACH,CAZQ,CAYN,CAACH,UAAD,CAZM,CAAT,CAcA,MAAO,CAAEC,IAAI,CAAJA,IAAF,CAAP,CACH,CAlBD,CAoBA,cAAeF,CAAAA,YAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport { projectFirestore} from  '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n        .orderBy('createdAt', 'desc')\n        .onSnapshot((snap) => {\n            let documents = [];\n            snap.forEach(doc => {\n                documents.push({...doc.data(), id: doc.id})\n            });\n            setDocs(documents);    \n        });\n\n        return () => unsub();\n    }, [collection])\n\n    return { docs };\n}\n\nexport default useFirestore;"]},"metadata":{},"sourceType":"module"}