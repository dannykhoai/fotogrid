{"ast":null,"code":"var _jsxFileName = \"/Users/dungvu/OneDrive/Code/project fotogrid/src/comps/UploadForm.js\";\nimport React from 'react';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const types = ['image/png', 'image/jpeg']; //set file type to only png and img\n\n  const changeHandler = () => {\n    let selected = e.target.files[0]; //\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n    } else {\n      setFile(null);\n      setError('Select an image file (png or jpeg)');\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    classname: \"output\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, error && /*#__PURE__*/React.createElement(\"div\", {\n    classname: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 28\n    }\n  }, \" \", error, \" \")));\n};\n\nexport default UploadForm;","map":{"version":3,"sources":["/Users/dungvu/OneDrive/Code/project fotogrid/src/comps/UploadForm.js"],"names":["React","UploadForm","file","setFile","useState","error","setError","types","changeHandler","selected","e","target","files","includes","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBF,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMG,KAAK,GAAG,CAAC,WAAD,EAAc,YAAd,CAAd,CAJqB,CAIsB;;AAE3C,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIC,QAAQ,GAAGC,CAAC,CAACC,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf,CADwB,CAGxB;;AACA,QAAIH,QAAQ,IAAIF,KAAK,CAACM,QAAN,CAAeJ,QAAQ,CAACK,IAAxB,CAAhB,EAA+C;AAC3CX,MAAAA,OAAO,CAACM,QAAD,CAAP;AACH,KAFD,MAGK;AACDN,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAG,MAAAA,QAAQ,CAAC,oCAAD,CAAR;AACH;AACJ,GAXD;;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAEE,aAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAK,IAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMH,KAAK,iBAAI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BA,KAA1B,MADf,CAFJ,CADJ;AAQH,CA3BD;;AA4BA,eAAeJ,UAAf","sourcesContent":["import React from 'react';\n\n\nconst UploadForm = () => { \n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg']; //set file type to only png and img\n\n    const changeHandler = () => {\n        let selected = e.target.files[0];\n        \n        //\n        if (selected && types.includes(selected.type)) {\n            setFile(selected);\n        }\n        else {\n            setFile(null);\n            setError('Select an image file (png or jpeg)');\n        }\n    }\n\n    return (\n        <form>\n            <input type=\"file\" onChange={changeHandler} />\n            <div classname =\"output\">\n                { error && <div classname=\"error\"> { error } </div> }\n            </div>\n        </form>\n    )\n}\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}