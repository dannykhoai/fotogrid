{"ast":null,"code":"import _regeneratorRuntime from\"/Users/dungvu/OneDrive/Code/project fotogrid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/dungvu/OneDrive/Code/project fotogrid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/dungvu/OneDrive/Code/project fotogrid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from'react';import{projectStorage,projectFirestore,timestamp}from'../firebase/config';var useStorage=function useStorage(file){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),progress=_useState2[0],setProgress=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),url=_useState6[0],setUrl=_useState6[1];useEffect(function(){//references\nvar storageRef=projectStorage.ref(file.name);var collectionRef=projectFirestore.collection('images');storageRef.put(file).on('stage_change',function(snap){var percentage=snap.bytesTransferred/snap.totalBytes*100;//percentage of the upload\nsetProgress(percentage);},function(err){setError(err);},/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var url,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return storageRef.getDownloadURL();case 2:url=_context.sent;createdAt=timestamp;collectionRef.add({url:url,createdAt:createdAt});setUrl(url);case 6:case\"end\":return _context.stop();}}},_callee);})));},[file]);return{progress:progress,url:url,error:error};};export default useStorage;","map":{"version":3,"sources":["/Users/dungvu/OneDrive/Code/project fotogrid/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","projectFirestore","timestamp","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add"],"mappings":"seAAA,OAAQA,QAAR,CAAkBC,SAAlB,KAAkC,OAAlC,CACA,OAASC,cAAT,CAAyBC,gBAAzB,CAA2CC,SAA3C,KAA6D,oBAA7D,CAGA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,eACON,QAAQ,CAAC,CAAD,CADf,wCAClBO,QADkB,eACRC,WADQ,8BAECR,QAAQ,CAAC,IAAD,CAFT,yCAElBS,KAFkB,eAEXC,QAFW,8BAGHV,QAAQ,CAAC,IAAD,CAHL,yCAGlBW,GAHkB,eAGbC,MAHa,eAKzBX,SAAS,CAAC,UAAM,CACZ;AACA,GAAMY,CAAAA,UAAU,CAAGX,cAAc,CAACY,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB,CACA,GAAMC,CAAAA,aAAa,CAAGb,gBAAgB,CAACc,UAAjB,CAA4B,QAA5B,CAAtB,CAIAJ,UAAU,CAACK,GAAX,CAAeZ,IAAf,EAAqBa,EAArB,CAAwB,cAAxB,CAAwC,SAACC,IAAD,CAAU,CAC9C,GAAIC,CAAAA,UAAU,CAAID,IAAI,CAACE,gBAAL,CAAuBF,IAAI,CAACG,UAA7B,CAA2C,GAA5D,CAAiE;AACjEf,WAAW,CAACa,UAAD,CAAX,CACH,CAHD,CAGG,SAACG,GAAD,CAAS,CACRd,QAAQ,CAACc,GAAD,CAAR,CACH,CALD,sEAKG,2KACmBX,CAAAA,UAAU,CAACY,cAAX,EADnB,QACOd,GADP,eAEOe,SAFP,CAEmBtB,SAFnB,CAGCY,aAAa,CAACW,GAAd,CAAmB,CAAEhB,GAAG,CAAHA,GAAF,CAAOe,SAAS,CAATA,SAAP,CAAnB,EACAd,MAAM,CAACD,GAAD,CAAN,CAJD,sDALH,IAYH,CAnBQ,CAmBN,CAACL,IAAD,CAnBM,CAAT,CAoBA,MAAO,CAAEC,QAAQ,CAARA,QAAF,CAAYI,GAAG,CAAHA,GAAZ,CAAiBF,KAAK,CAALA,KAAjB,CAAP,CACH,CA1BD,CA4BA,cAAeJ,CAAAA,UAAf","sourcesContent":["import {useState, useEffect} from 'react';\nimport { projectStorage, projectFirestore, timestamp } from  '../firebase/config';\n\n\nconst useStorage = (file) =>Â {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n    \n    useEffect(() => {\n        //references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n\n\n        storageRef.put(file).on('stage_change', (snap) => {\n            let percentage = (snap.bytesTransferred /snap.totalBytes) * 100; //percentage of the upload\n            setProgress(percentage);\n        }, (err) => {\n            setError(err); \n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp;\n            collectionRef.add ({ url, createdAt })\n            setUrl(url);\n        })\n\n    }, [file]); \n    return { progress, url, error}\n}\n\nexport default useStorage;\n\n"]},"metadata":{},"sourceType":"module"}