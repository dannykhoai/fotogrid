{"ast":null,"code":"import _slicedToArray from\"/Users/dungvu/OneDrive/Code/project fotogrid/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import ProgressBar from'./ProgressBar';var UploadForm=function UploadForm(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),file=_useState2[0],setFile=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),error=_useState4[0],setError=_useState4[1];var types=['image/png','image/jpeg'];//set file type to only png and img\nvar changeHandler=function changeHandler(e){var selected=e.target.files[0];//\nif(selected&&types.includes(selected.type)){setFile(selected);setError('');}else{setFile(null);setError('Select an image file (png or jpeg)');}};return/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"input\",{type:\"file\",onChange:changeHandler}),/*#__PURE__*/React.createElement(\"div\",{className:\"output\"},error&&/*#__PURE__*/React.createElement(\"div\",{className:\"error\"},\" \",error,\" \"),file&&/*#__PURE__*/React.createElement(\"div\",null,\" \",file.name,\" \"),file&&/*#__PURE__*/React.createElement(ProgressBar,{file:file,setFile:setFile})));};export default UploadForm;","map":{"version":3,"sources":["/Users/dungvu/OneDrive/Code/project fotogrid/src/comps/UploadForm.js"],"names":["React","useState","ProgressBar","UploadForm","file","setFile","error","setError","types","changeHandler","e","selected","target","files","includes","type","name"],"mappings":"mKAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA+B,OAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACGF,QAAQ,CAAC,IAAD,CADX,wCACdG,IADc,eACRC,OADQ,8BAEKJ,QAAQ,CAAC,IAAD,CAFb,yCAEdK,KAFc,eAEPC,QAFO,eAIrB,GAAMC,CAAAA,KAAK,CAAG,CAAC,WAAD,CAAc,YAAd,CAAd,CAA2C;AAE3C,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzB,GAAIC,CAAAA,QAAQ,CAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAf,CAEA;AACA,GAAIF,QAAQ,EAAIH,KAAK,CAACM,QAAN,CAAeH,QAAQ,CAACI,IAAxB,CAAhB,CAA+C,CAC3CV,OAAO,CAACM,QAAD,CAAP,CACAJ,QAAQ,CAAC,EAAD,CAAR,CACH,CAHD,IAIK,CACDF,OAAO,CAAC,IAAD,CAAP,CACAE,QAAQ,CAAC,oCAAD,CAAR,CACH,CACJ,CAZD,CAcA,mBACI,6CACI,6BAAO,IAAI,CAAC,MAAZ,CAAmB,QAAQ,CAAEE,aAA7B,EADJ,cAEI,2BAAK,SAAS,CAAE,QAAhB,EACMH,KAAK,eAAI,2BAAK,SAAS,CAAC,OAAf,MAA0BA,KAA1B,KADf,CAEMF,IAAI,eAAI,mCAAOA,IAAI,CAACY,IAAZ,KAFd,CAGMZ,IAAI,eAAI,oBAAC,WAAD,EAAa,IAAI,CAAEA,IAAnB,CAAyB,OAAO,CAAGC,OAAnC,EAHd,CAFJ,CADJ,CAUH,CA9BD,CA+BA,cAAeF,CAAAA,UAAf","sourcesContent":["import React, {useState}  from 'react';\nimport ProgressBar from './ProgressBar';\n\n\n\nconst UploadForm = () => { \n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = ['image/png', 'image/jpeg']; //set file type to only png and img\n\n    const changeHandler = (e) => {\n        let selected = e.target.files[0];\n        \n        //\n        if (selected && types.includes(selected.type)) {\n            setFile(selected);\n            setError('');\n        }\n        else {\n            setFile(null);\n            setError('Select an image file (png or jpeg)');\n        }\n    }\n\n    return (\n        <form>\n            <input type=\"file\" onChange={changeHandler} />\n            <div className =\"output\">\n                { error && <div className=\"error\"> { error } </div> }\n                { file && <div> {file.name} </div> }\n                { file && <ProgressBar file={file} setFile ={setFile} /> }\n            </div>\n        </form>\n    )\n}\nexport default UploadForm;"]},"metadata":{},"sourceType":"module"}