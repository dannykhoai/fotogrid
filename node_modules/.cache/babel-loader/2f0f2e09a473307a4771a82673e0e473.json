{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { projectStorage } from '../firebase/config';\n\nconst useStorage = file => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n  useEffect(() => {\n    //references\n    const storageRef = projectStorage.ref(file.name);\n    storageRef.put(file).on('stage_change', snap => {\n      let percentage = snap.bytesTransferred / snap.totalBytes * 100; //percentage of the upload\n\n      setProgress(percentage);\n    });\n  }, [file]);\n};","map":{"version":3,"sources":["/Users/dungvu/OneDrive/Code/project fotogrid/src/hooks/useStorage.js"],"names":["useState","useEffect","projectStorage","useStorage","file","progress","setProgress","error","setError","url","setUrl","storageRef","ref","name","put","on","snap","percentage","bytesTransferred","totalBytes"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAAgC,oBAAhC;;AAGA,MAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACS,GAAD,EAAMC,MAAN,IAAgBV,QAAQ,CAAC,IAAD,CAA9B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMU,UAAU,GAAGT,cAAc,CAACU,GAAf,CAAmBR,IAAI,CAACS,IAAxB,CAAnB;AAEAF,IAAAA,UAAU,CAACG,GAAX,CAAeV,IAAf,EAAqBW,EAArB,CAAwB,cAAxB,EAAyCC,IAAD,IAAU;AAC9C,UAAIC,UAAU,GAAID,IAAI,CAACE,gBAAL,GAAuBF,IAAI,CAACG,UAA7B,GAA2C,GAA5D,CAD8C,CACmB;;AACjEb,MAAAA,WAAW,CAACW,UAAD,CAAX;AACH,KAHD;AAKH,GATQ,EASN,CAACb,IAAD,CATM,CAAT;AAUH,CAfD","sourcesContent":["import {useState, useEffect} from 'react';\nimport { projectStorage } from  '../firebase/config';\n\n\nconst useStorage = (file) =>Â {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n    \n    useEffect(() => {\n        //references\n        const storageRef = projectStorage.ref(file.name)\n\n        storageRef.put(file).on('stage_change', (snap) => {\n            let percentage = (snap.bytesTransferred /snap.totalBytes) * 100; //percentage of the upload\n            setProgress(percentage);\n        })\n\n    }, [file])\n}"]},"metadata":{},"sourceType":"module"}