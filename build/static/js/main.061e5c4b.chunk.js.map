{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Zoom.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","comps/CheckAuth.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","div","key","layout","whileHover","opacity","onClick","url","img","src","alt","initial","animate","transition","delay","photoURL","Zoom","selectedImg","e","target","classList","contains","y","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","auth","currentUser","uid","add","ProgressBar","setFile","width","UploadForm","types","type","onChange","selected","files","includes","SignIn","provider","GoogleAuthProvider","signInWithPopup","SignOut","signOut","CheckAuth","useAuthState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.061e5c4b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FotoGrid</h1>\n      <h2> Awesome Photobook  </h2>\n      <p> Try uploading some photos to show the whole World <br></br> that you have access to the internet ☃️ </p>\n    </div>\n  )\n}\n\nexport default Title;","\nimport firebase from \"firebase/app\";\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\n\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBpngPJObX8dO__rantT5B5GUiCIHD4NTo\",\n  authDomain: \"fotogrid-f721f.firebaseapp.com\",\n  databaseURL: \"https://fotogrid-f721f.firebaseio.com\",\n  projectId: \"fotogrid-f721f\",\n  storageBucket: \"fotogrid-f721f.appspot.com\",\n  messagingSenderId: \"144160098659\",\n  appId: \"1:144160098659:web:55d200b9ff630fbed96b56\",\n  measurementId: \"G-2YJ18LXKXS\"\n};\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp();\n\n\n\nexport { projectStorage, projectFirestore, timestamp };\n  \n","import {useState, useEffect} from 'react';\nimport { projectFirestore} from  '../firebase/config';\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(() => {\n        const unsub = projectFirestore.collection(collection)\n        .orderBy('createdAt', 'desc')\n        .onSnapshot((snap) => {\n            let documents = [];\n            snap.forEach(doc => {\n                documents.push({...doc.data(), id: doc.id})\n            });\n            setDocs(documents);    \n        });\n\n        return () => unsub();\n    }, [collection])\n\n    return { docs };\n}\n\nexport default useFirestore;","import  React from 'react';\nimport useFirestore from '../hooks/useFirestore';\nimport { motion } from 'framer-motion';\n\n\nconst ImageGrid = ({ setSelectedImg }) => {\n    const { docs } = useFirestore('images');\n\n    return (\n        <div className=\"img-grid\">\n            { docs && docs.map(doc => (\n                <motion.div className=\"img-wrap\" key={doc.id}\n                    layout\n                    whileHover={ {opacity : 1} }  //css styling has initial value of 0.8\n                    onClick={() => setSelectedImg(doc.url)}\n                >\n                 <motion.img src={doc.url} alt=\"uploaded imgs\"\n                        initial=    {{opacity: 0}}\n                        animate=    {{opacity: 1}} \n                        transition= {{delay: 1}}\n                 />\n                 <motion.img className=\"avatar\" alt=\"uploader avatar\" src={doc.photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} \n                        initial=    {{opacity: 0}}\n                        animate=    {{opacity: 1}} \n                        transition= {{delay: 2}}\n                 />\n                </motion.div>\n            ))}\n        </div>\n    )\n}\n\nexport default ImageGrid;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\n\nconst Zoom = ({ selectedImg, setSelectedImg }) => {\n\n    const handleClick = (e) => {\n        if (e.target.classList.contains('backdrop')) {\n          setSelectedImg(null);\n        }\n      }\n\n    return (\n        <motion.div className=\"backdrop\" onClick={handleClick}\n            initial= {{ opacity : 0 }}\n            animate= {{ opacity : 1 }}\n            >\n\n\n            <motion.img src={selectedImg} alt=\"enlarged pic\"\n              initial= {{y : \"-100vh\"}}\n              animate= {{y : 0}}\n            />\n        </motion.div>\n    )\n\n\n}\n\nexport default Zoom;","import {useState, useEffect} from 'react';\nimport { projectStorage, projectFirestore, timestamp } from  '../firebase/config';\nimport { auth } from '../comps/CheckAuth';\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n    \n    useEffect(() => {\n        //references\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n\n\n        storageRef.put(file).on('stage_change', (snap) => {\n            let percentage = (snap.bytesTransferred /snap.totalBytes) * 100; //percentage of the upload\n            setProgress(percentage);\n        }, (err) => {\n            setError(err); \n        }, async () => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp;\n            const { uid, photoURL } = auth.currentUser;\n            \n            collectionRef.add ({ url, createdAt, uid, photoURL })\n            setUrl(url);\n        })\n\n    }, [file]); \n    return { progress, url, error}\n}\n\nexport default useStorage;\n\n","import React, {useEffect} from 'react';\nimport { motion } from 'framer-motion';\nimport useStorage from '../hooks/useStorage';\n\n\nconst ProgressBar = ({ file, setFile}) => {\n    const { url, progress } = useStorage(file);\n\n    useEffect(() => { if(url) {setFile(null); }\n\n    }, [url, setFile] )\n\n    return (\n        <motion.div className=\"progress-bar\"\n            initial= {{width: 0}}\n            animate= {{width : progress + '%' }}\n        ></motion.div>\n    )\n    \n \n}\n\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n\n  const types = ['image/png', 'image/jpeg'];\n\n  const handleChange = (e) => {\n    let selected = e.target.files[0];\n\n    if (selected && types.includes(selected.type)) {\n      setFile(selected);\n      setError('');\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpg)');\n    }\n  };\n\n  return (\n    <form>\n      <label>\n        <input type=\"file\" onChange={handleChange} />\n        <span>+</span>\n      </label>\n      <div className=\"output\">\n        { error && <div className=\"error\">{ error }</div>}\n        { file && <div>{ file.name }</div> }\n        { file && <ProgressBar file={file} setFile={setFile} /> }\n      </div>\n    </form>\n  );\n}\n\nexport default UploadForm;\n","\nimport React from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport UploadForm from './UploadForm';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\n\n\nconst auth = firebase.auth();\n\nfunction SignIn() {\n\n    const signInWithGoogle = () => {\n      const provider = new firebase.auth.GoogleAuthProvider();\n      auth.signInWithPopup(provider);\n    }\n  \n    return(\n      <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google to upload pic 📷</button>\n      </>\n    )\n  }\n  \n  \nfunction SignOut() {\n    return auth.currentUser && (\n      <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n    )\n  } \n\nconst CheckAuth = () => {\n  const [user] = useAuthState(auth);\n    \n    if (!user) {\n      return (\n        <SignIn />\n      );\n    }\n\n    return (\n      <div>\n        <SignOut />\n        <UploadForm />\n      </div>\n    )\n  }\n  \n\n  export { auth };\n  export default CheckAuth;","import React, {useState} from 'react';\nimport Title from './comps/Title';\n//import UploadForm from './comps/UploadForm'; \nimport ImageGrid from './comps/ImageGrid';\nimport Zoom from './comps/Zoom';\nimport CheckAuth from './comps/CheckAuth';\n\n\n\nfunction App() {\n\n  const [selectedImg, setSelectedImg] = useState(null);\n\n\n  return (\n    <div className=\"App\">\n      \n      <Title />\n      <CheckAuth />\n      <ImageGrid setSelectedImg={setSelectedImg} />\n      { selectedImg && <Zoom selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}